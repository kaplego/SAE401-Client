@use './colors.scss';
@use './containers.scss';
@use './fonts.scss';

* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

body {
	background-color: var(--t-background1);
	color: var(--t-foreground1);
	font-family: 'Lato', Arial, Helvetica, sans-serif;
}

a {
	color: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	margin: 0.5em 0 1em 0;
	font-weight: 300;
	font-family: 'Rubik', Arial, Helvetica, sans-serif;
	letter-spacing: 2px;
}

.lucide {
	height: 1em;
	width: 1em;
}

header {
	background-color: var(--t-background2);

	.container {
		display: grid;
		grid-template-columns: repeat(3, 1fr);

		.logo {
			grid-column: 1 / 2;
			aspect-ratio: 3 / 1;
			height: 5rem;
		}

		#recherche {
			display: grid;
			grid-template-columns: 1fr auto;
			align-items: center;
			width: 100%;
			height: 40px;
			margin: auto 0;

			input {
				height: 100%;
				border-radius: 6px 0 0 6px;
				border: 2px solid var(--t-border1);
				background-color: transparent;
				color: var(--t-foreground1);
				outline: none;
				padding: 0 0.5rem;
				font-size: 1rem;
				transition: all 100ms;

				&:focus {
					background-color: var(--t-background1);
				}
			}

			button {
				height: 100%;
				border-radius: 0 6px 6px 0;
				border: 2px solid var(--t-border1);
				border-left: none;
				background-color: transparent;
				color: var(--t-foreground1);
				cursor: pointer;
				padding: 0 0.5rem;
				transition: all 100ms;

				&:hover {
					background-color: var(--t-background1);
				}

				.lucide {
					height: 20px;
				}
			}

			&:hover input,
			&:hover button,
			&:focus-within input,
			&:focus-within button {
				border-color: var(--t-border1-accent);
			}
		}

		.icons {
			display: flex;
			align-items: center;
			margin-left: auto;
			height: 100%;
			gap: 0.5rem;

			.icon-button {
				border-radius: 100vw;
				padding: 0.4rem;
				border: 2px solid transparent;
				aspect-ratio: 1;
				line-height: 0;
				transition: all 100ms;
				position: relative;

				&:hover {
					background-color: var(--t-background3);
				}

				&.router-link-active {
					background-color: var(--t-background1-accent);
					color: var(--t-foreground2-accent);
					border-color: rgb(from var(--t-foreground1-accent) r g b / 0.5);
				}

				.badge {
					position: absolute;
					top: 0;
					right: 0;
					transform: translate(50%, -50%);
					height: 20px;
					width: 20px;
					background-color: var(--c-accent-500);
					color: white;
					border-radius: 100vw;
					display: flex;
					align-items: center;
					justify-content: center;
					font-size: 0.9rem;
				}

				.lucide {
					height: 20px;
					width: 20px;
				}
			}

			#theme-switch {
				cursor: pointer;
				margin-left: 1rem;

				#theme-cb {
					width: 0;
					height: 0;
					visibility: hidden;
					position: absolute;

					&:checked {
						+ #theme-track {
							&:hover {
								border-color: var(--c-blue-300);
								box-shadow: 0 0 1rem var(--c-blue-600);
							}

							#theme-knob {
								margin-left: calc(46px - 21px);
							}
						}
					}
				}

				#theme-track {
					width: 50px;
					height: 25px;
					background-color: var(--t-background3);
					border-radius: 100vw;
					padding: 2px;
					transition: all 200ms;
					border: 1px solid var(--c-gray-400);
					position: relative;

					&:hover {
						border-color: var(--c-yellow-300);
						box-shadow: 0 0 1rem var(--c-yellow-100);
					}

					#theme-knob {
						height: calc(100% - 2 * 2px);
						aspect-ratio: 1 / 1;
						background-color: var(--t-background2);
						border-radius: 100vw;
						margin-left: 0px;
						transition: all 300ms ease-out;
						display: flex;
						align-items: center;
						justify-content: center;
						position: absolute;
						z-index: 100;
					}

					.lucide {
						height: calc(100% - 2 * 4px);
						margin: 2px;
						aspect-ratio: 1 / 1;
						position: absolute;
						z-index: 99;

						&.lucide-sun-icon {
							right: 0;
						}

						&.lucide-moon-icon {
							left: 0;
						}
					}
				}
			}
		}
	}
}

nav {
	background-color: var(--t-background2);
	padding: 1rem 0;

	.container {
		display: flex;
		position: relative;
		gap: 1rem;

		.underline {
			position: absolute;
			bottom: -5px;
			left: 0;
			transition: all 300ms;
			background-color: var(--c-accent-500);
			height: 2px;
		}

		.item {
			font-size: 1.1rem;
			text-decoration: none;

			&.router-link-active,
			&.router-link-exact-active {
				color: var(--c-accent-500);
			}
		}
	}
}

#navigationProduits {
	display: flex;
	gap: 1rem;
	padding-bottom: 0;
}

#navigationProduits .item {
	user-select: none;
	cursor: pointer;
	transition: color 100ms;
	padding-bottom: 1rem;
	position: relative;

	&.placeholder {
		padding-bottom: 0;
		margin-bottom: 1rem;
	}

	&:hover {
		.item-name,
		&:not(:has(.dropdown)) {
			color: var(--c-accent-500);
		}

		.dropdown {
			opacity: 1;
			scale: 1;
			padding: 1rem 2rem;
		}
	}
	border-bottom: 1px solid transparent;

	&.router-link-active {
		color: var(--c-accent-500);
		border-bottom-color: var(--c-accent-500);
	}

	&:has(.router-link-active) {
		border-bottom-color: var(--c-accent-500);

		.item-name.router-link-active {
			color: var(--c-accent-500);
		}
	}

	.item-name {
		text-decoration: none;
	}

	.dropdown {
		transition: all 200ms;
		position: absolute;
		top: calc(100% + 1px);
		left: -2rem;
		opacity: 0;
		scale: 1 0;
		transform-origin: top;
		overflow: auto;
		background-color: var(--t-background1-accent);
		border-radius: 0 0 6px 6px;
		cursor: auto;
		padding: 0rem 2rem;
		max-height: 300px;
		z-index: 100;

		&.dropdown-columns {
			display: grid;
			grid-template-rows: 100%;
			grid-auto-columns: 200px;
			grid-auto-flow: column;
			line-height: 1.5;

			.column-item {
				font-weight: 300;
				cursor: pointer;
				width: max-content;
				transition: color 100ms;
				display: block;
				text-decoration: none;

				&:hover {
					color: var(--c-accent-400);
				}

				&.router-link-active {
					color: var(--c-accent-500);
				}

				a {
					color: inherit;
					text-decoration: none;
				}
			}
			.column-title {
				font-family: 'Rubik';
			}
		}
	}
}

main {
	padding: 1rem 0;
}

body.theme-dark {
	header {
		.logo {
			filter: invert(1);
		}
	}
}

body.theme-darkdim {
	* {
		background-color: orange !important;
		background: url(https://satisfactory.wiki.gg/images/c/c3/Satisfactory_logo_full_color_square.png?e4b0eb);
		background-repeat: no-repeat;
		background-size: contain;
		background-position: center center;
		border-color: green !important;
		color: blue !important;
		font-weight: 900 !important;
		text-transform: uppercase;
		box-shadow: 0 0 100px black;
	}
}

@keyframes spinner {
	from {
		transform: rotateZ(0deg);
	}
	to {
		transform: rotateZ(360deg);
	}
}

.loading-spinner {
	height: 25px;
	aspect-ratio: 1;
	border-radius: 100vw;
	border: 2px solid currentColor;
	border-top-color: transparent;
	animation: spinner 1s linear 0s infinite normal forwards;
}

@mixin button() {
	padding: 0.5rem 1rem;
	border-radius: 4px;
	cursor: pointer;
	border: none;
	transition: all 100ms;
	display: block;
	font-size: 1rem;
	width: max-content;
	text-decoration: none;

	&:hover:not(:disabled) {
		opacity: 0.75;
	}

	&:disabled {
		opacity: 0.5;
		cursor: not-allowed;
	}
}

.button {
	@include button();

	&.button-sm {
		padding: 0.3rem 0.6rem;
		font-size: 0.9rem;
		border-radius: 3px;
	}

	&.button-lg {
		padding: 0.7rem 1.2rem;
		font-size: 1.1rem;
		border-radius: 5px;
	}
}

.button-primary {
	background-color: var(--t-background3-accent);
	color: white;
}

.button-secondary {
	background-color: var(--t-background5);
	color: white;
}

.button-danger {
	background-color: var(--c-red-500);
	color: white;
}

.button-warning {
	background-color: var(--c-yellow-500);
	color: white;
}

.button-success {
	background-color: var(--c-green-500);
	color: white;
}

.button-text {
	color: var(--c-blue-500);
	background: none;
	border: none;
	cursor: pointer;
	font-size: 1em;
	display: inline-flex;
	align-items: center;
	text-decoration: underline 1px transparent;
	transition: all 100ms;

	&:hover {
		text-decoration-color: currentColor;
	}
}

@mixin input() {
	position: relative;

	.label {
		position: absolute;
		left: calc(1rem - 4px);
		top: 50%;
		transform: translateY(-50%);
		transition: all 100ms;
		background-color: var(--t-background1);
		padding: 0 4px;
		cursor: text;
		user-select: none;
	}

	.input {
		width: 100%;
		padding: 0.5rem 1rem;
		border-radius: 4px;
		border: 1px solid var(--c-accent-500);
		outline: 0px solid var(--c-accent-500);
		font-size: 1rem;
		transition: outline 100ms;

		&:focus {
			border-color: var(--t-border1-accent);
			outline: 2px solid var(--t-border1-accent);
		}
	}
}

.input-control {
	@include input();

	.input::placeholder {
		display: none;
	}

	&:focus-within,
	&:has(.input:not(:placeholder-shown)) {
		.label {
			top: 0;
			font-size: 0.9rem;
			color: rgb(from var(--t-foreground1) r g b / 1);
		}

		.input::placeholder {
			display: unset;
		}
	}

	&:has(.input:invalid) {
		.label {
			color: var(--c-red-500);
		}

		.input {
			border-color: var(--c-red-500);
			outline-color: var(--c-red-500);
		}
	}
}

.select-control {
	@include input();

	.label {
		top: 0;
		font-size: 0.9rem;
		color: rgb(from var(--t-foreground1) r g b / 1);
		cursor: pointer;

		&::after {
			display: none;
		}
	}

	.input {
		background-color: var(--t-background1);
		cursor: pointer;
	}

	&:has(.input:invalid) {
		.label {
			color: var(--c-red-500);
		}

		.input {
			border-color: var(--c-red-500);
		}
	}
}

.required {
	color: var(--c-red-500);
	height: 1em;
	width: 1em;
}

@mixin tooltip-base($content) {
	position: relative;
	z-index: 1000;

	&::before {
		content: $content;
		position: absolute;
		bottom: calc(100% + 0.5rem);
		width: max-content;
		max-width: 150px;
		left: 50%;
		transform: translateX(-50%);
		background-color: var(--t-background5);
		z-index: 150;
		display: none;
		padding: 0.25rem 0.5rem;
		color: var(--t-foreground5);
		border-radius: 4px;
		line-height: 1;
	}

	&::after {
		content: '';
		position: absolute;
		display: none;
		height: 8px;
		width: 8px;
		left: calc(50% - 4px);
		bottom: calc(100% + 0.5rem - 4px);
		transform: rotateZ(45deg);
		background-color: var(--t-background5);
		z-index: 149;
	}

	&:hover::before,
	&:hover::after {
		display: block;
	}
}

*[data-tooltip] {
	@include tooltip-base(attr(data-tooltip));
}
*[data-tooltip-down] {
	@include tooltip-base(attr(data-tooltip-down));

	&::before {
		bottom: unset;
		top: calc(100% + 0.5rem);
	}

	&::after {
		bottom: unset;
		top: calc(100% + 0.5rem - 4px);
	}
}

.obV3p295 {
	position: absolute;
	top: 0;
	left: 0;
	height: 10px;
	width: 10px;
	background-color: transparent;
}
